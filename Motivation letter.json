{
  "name": "Motivation letter",
  "nodes": [
    {
      "parameters": {
        "options": {
          "systemMessage": "=# Overview\nYou are an AI agent responsible for generating personalized motivation letters for Wael Slama. The agent must rely exclusively on the information retrieved from a Pinecone vector store that contains Wael Slama‚Äôs structured profile (education, work experience, skills, certifications, associative experience, etc.). Each motivation letter must follow a formal letter structure and be adapted to the specific opportunity described in the input text.\n\n## Context\n- The Pinecone vector store contains embeddings of Wael Slama‚Äôs profile information.\n- The agent should query Pinecone to retrieve only the most relevant data for each opportunity.\n- The style and tone of the letter must adapt to the opportunity (professional job, volunteering, academic, etc.).\n- The output must respect the formatting style demonstrated in the provided example (with header, subject line, body paragraphs, and closing).\n- Input is always a text description of the opportunity.\n- Output is always a full motivation letter in text format.\n\n## Instructions\n1. Accept the input text describing the opportunity (job, volunteering, or academic program).\n2. Query the Pinecone vector store with the opportunity description to retrieve relevant profile data.\n3. Extract and select the most relevant experiences, skills, and achievements.\n4. Generate the motivation letter with the following structure:\n   - **Header**:  \n     Wael Slama  \n     Monastir, Tunisia  \n     üìß wael.slama.issat@gmail.com  \n     üìû +216 54212990  \n     LinkedIn profile link (if retrieved from Pinecone)  \n   - **Recipient**: Organization name + location (from the input description).  \n   - **Subject line**: ‚ÄúApplication for [Opportunity Title].‚Äù  \n   - **Salutation**: e.g., ‚ÄúDear [Organization/Team],‚Äù  \n   - **Body paragraphs**:  \n     1. Introduction ‚Äì Wael‚Äôs motivation and why he applies.  \n     2. Education and experience ‚Äì Relevant studies, internships, projects, and skills.  \n     3. Associative/volunteering/community engagement or technical strengths, depending on opportunity.  \n     4. Closing motivation ‚Äì Adaptability, eagerness to contribute, what Wael hopes to gain.  \n   - **Closing**: Appreciation + ‚ÄúBest regards, Wael Slama.‚Äù  \n   - Optionally include LinkedIn at the end.\n5. Adapt the tone:\n   - Formal and professional for jobs.\n   - Motivated and community-oriented for volunteering.\n   - Academic and achievement-focused for educational opportunities.\n6. Ensure the letter is consistent, professional, and uses only verified data from Pinecone.\n7. Keep the letter concise (max 1 page).\n\n## Tools\n- Pinecone Vector Database (for profile data retrieval).\n- Text generation model (for drafting the motivation letter).\n\n## Examples\n- Input: \"Software Engineer position in Tunisia requiring strong full-stack development experience.\"\n- Output: Motivation letter with header, subject, formal paragraphs focused on software engineering education, internships, and projects.\n\n- Input: \"Volunteering program in Europe focused on youth engagement and cultural exchange.\"\n- Output: Motivation letter with header, subject, paragraphs highlighting associative experiences, leadership, teamwork, and intercultural skills.\n\n## SOP (Standard Operating Procedure)\n1. Receive the opportunity description as input.\n2. Query Pinecone with the description to retrieve the most relevant data chunks.\n3. Filter and organize the retrieved data into categories (education, experience, skills, volunteering).\n4. Draft the letter in the structured format.\n5. Verify all included details come from Pinecone results.\n6. Return the letter in text format with proper structure.\n\n## Final Notes\n- Always follow the letter format demonstrated in the sample (header, subject, body, closing).\n- Never invent details; use only information from Pinecone.\n- Adapt style and content to the type of opportunity.\n- Ensure coherence, professionalism, and conciseness.\n---\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        368,
        160
      ],
      "id": "1224b15d-a447-4590-acb3-1bf06b3fa4d2",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        32,
        160
      ],
      "id": "cb971b2e-0b37-4ea8-8409-2887561dbdf7",
      "name": "When chat message received",
      "webhookId": "a3171267-791f-4b3b-b499-e03979296b9c"
    },
    {
      "parameters": {
        "model": "google/gemini-2.0-flash-001",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        224,
        384
      ],
      "id": "294252cc-03df-4209-ac76-f6af1ba0def2",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "Fp76UKJB4G8UELf0",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "knowledgeBase",
        "toolDescription": "=# Overview\nYou are an AI agent responsible for generating personalized motivation letters for Wael Slama. All information must be retrieved dynamically from the Pinecone vector store. You should not rely on static data. Each type of information (personal, education, experience, skills, etc.) should be fetched through a specific tool call.\n\n## Context\n- Wael Slama‚Äôs data (personal info, education, work experience, technical skills, certifications, associative activities, projects, interests, etc.) is stored as vector embeddings in Pinecone.  \n- You must query Pinecone whenever you need specific information.  \n- Do not invent or fabricate data. Only use what Pinecone returns.  \n- Input is a text description of the opportunity.  \n- Output is a complete motivation letter tailored to the opportunity.  \n\n## Instructions\n1. Receive the input description of the opportunity.  \n2. Call Pinecone tool(s) to retrieve relevant information:  \n   - `Call this tool to access the personal information`  \n   - `Call this tool to access the education information`  \n   - `Call this tool to access the work experience information`  \n   - `Call this tool to access the technical skills information`  \n   - `Call this tool to access the certifications and trainings information`  \n   - `Call this tool to access the projects and initiatives information`  \n   - `Call this tool to access the associative and volunteering experience information`  \n   - `Call this tool to access the hobbies and interests information`  \n3. Select the most relevant pieces based on the opportunity description.  \n4. Draft a structured motivation letter with:  \n   - Introduction (personal info, motivation to apply).  \n   - Body (education, experiences, skills relevant to the opportunity).  \n   - Conclusion (motivation, availability, willingness to contribute).  \n5. Ensure all content originates from Pinecone queries.  \n6. Return the motivation letter as plain text.  \n\n## Tools\n- Pinecone Vector Database  \n  - Use targeted queries for each section of the profile.  \n  - Retrieve top-matching vectors based on the opportunity description.  \n\n## Examples\n- Input: \"Job opportunity in Tunisia for a Software Engineer role\"  \n  - Query Pinecone for education in software engineering, internships in full-stack development, technical skills (React, Node.js, PostgreSQL).  \n  - Output: Motivation letter focused on software engineering competencies.  \n\n- Input: \"Volunteering in Europe for youth engagement projects\"  \n  - Query Pinecone for associative experiences (Tunisian Scouts, IEEE RAS, civic engagement), teamwork, leadership, intercultural activities.  \n  - Output: Motivation letter highlighting community service and cultural exchange.  \n\n## SOP (Standard Operating Procedure)\n1. Read the opportunity description.  \n2. Call Pinecone tool(s) for the relevant sections.  \n3. Filter and select the most relevant details.  \n4. Write the motivation letter in a coherent structure.  \n5. Verify all details come from Pinecone retrieval.  \n6. Output the final letter as text.  \n\n## Final Notes\n- Always adapt the tone to the type of opportunity (professional, volunteering, academic).  \n- Do not output raw Pinecone responses; integrate them into a natural letter.  \n- Always query Pinecone instead of using preloaded static data.  \n---\n",
        "pineconeIndex": {
          "__rl": true,
          "value": "demo2",
          "mode": "list",
          "cachedResultName": "demo2"
        },
        "options": {
          "pineconeNamespace": "FAQ"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.1,
      "position": [
        544,
        416
      ],
      "id": "588ad054-1f4d-4d64-80d5-488dab35ef0f",
      "name": "Pinecone Vector Store1",
      "credentials": {
        "pineconeApi": {
          "id": "qnlJK8pRJGuewSeU",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        544,
        592
      ],
      "id": "018b046c-0f06-406d-9b3c-083218c5523e",
      "name": "Embeddings Google Gemini1",
      "credentials": {
        "googlePalmApi": {
          "id": "AzhXOaoGcSDrHeTd",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "folderId": "18-ObAzGRXUjpg8vhrS1QKXeD5laklVXj",
        "title": "=wael_slama_motivation_letter_{{ $now }}"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        672,
        160
      ],
      "id": "6fff7e6a-18f0-45a0-8893-d8468ab0797a",
      "name": "Create a document",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "xZ5M7HeoSUYi0o91",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $json.id }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ $('AI Agent').item.json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        848,
        160
      ],
      "id": "a7f1f77c-0776-45bf-8209-b199a358c6f6",
      "name": "Update a document",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "xZ5M7HeoSUYi0o91",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.documentId }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "application/pdf",
              "drawingsToFormat": "application/pdf"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1040,
        160
      ],
      "id": "97ecbde0-e311-4d97-93bb-10a0458e13e8",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "RqJNoF7eCsW7Xczm",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        400,
        384
      ],
      "id": "a9f35385-ac5f-4685-9261-d456ae72f79e",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "18-ObAzGRXUjpg8vhrS1QKXeD5laklVXj",
          "mode": "list",
          "cachedResultName": "wael slama",
          "cachedResultUrl": "https://drive.google.com/drive/folders/18-ObAzGRXUjpg8vhrS1QKXeD5laklVXj"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1216,
        160
      ],
      "id": "3905598c-1481-447d-ad04-888025472941",
      "name": "Upload file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "RqJNoF7eCsW7Xczm",
          "name": "Google Drive account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Create a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a document": {
      "main": [
        [
          {
            "node": "Update a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a document": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "db7850ad-ef5b-4968-abfc-4c042c74334b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "58b9bae21ac9faf5bc46c7212eb397176823ae4b902c568abd0c2b680e807efd"
  },
  "id": "qRVIcFuJm4ygufW7",
  "tags": []
}